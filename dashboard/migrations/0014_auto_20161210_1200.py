# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-10 06:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0013_auto_20161210_1035'),
    ]

    operations = [
        migrations.CreateModel(
            name='WeekWarning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveIntegerField(unique=True, verbose_name='Week Number')),
                ('calls_yellow_warning', models.PositiveIntegerField(help_text='Number of calls less than this value leads to yellow warning.', verbose_name='Call count - Yellow warning')),
                ('calls_red_warning', models.PositiveIntegerField(help_text='Number of calls less than this value leads to red warning.', verbose_name='Call count - Red warning')),
                ('member_call_yellow_warning', models.PositiveIntegerField(help_text='Person missing calls: > leads to yellow warning', verbose_name='Member call count - Yellow warning')),
                ('member_call_red_warning', models.PositiveIntegerField(help_text='Person missing calls: > leads to red warning', verbose_name='Member call count - Red warning')),
                ('kick_off_yellow_warning', models.BooleanField(help_text='Kick-off not happened in this week leads to yellow warning.', verbose_name='Kick Off - Yellow warning')),
                ('kick_off_red_warning', models.BooleanField(help_text='Kick-off not happened in this week leads to red warning.', verbose_name='Kick Off - Red warning')),
                ('mid_term_yellow_warning', models.BooleanField(help_text='Mid-term not happened in this week leads to yellow warning', verbose_name='Mid Term - Yellow warning')),
                ('mid_term_red_warning', models.BooleanField(help_text='Mid-term not happened in this week leads to red warning', verbose_name='Mid Term - Red warning')),
                ('phase', models.ForeignKey(help_text='Phases: Progress expected', on_delete=django.db.models.deletion.CASCADE, related_name='expected_phase', to='dashboard.AdvisoryPhase')),
                ('phase_red_warning', models.ForeignKey(help_text='Leads to red warning if in less than this Phase', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red_warning_phase', to='dashboard.AdvisoryPhase')),
                ('phase_yellow_warning', models.ForeignKey(help_text='Leads to yellow warning if in this Phase', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='yellow_warning_phase', to='dashboard.AdvisoryPhase')),
            ],
        ),
        migrations.AlterField(
            model_name='email',
            name='active',
            field=models.BooleanField(default=False, help_text='If this field is set to ON all the emails of the specified type will use this template. Each type of email can have only one default', verbose_name='Default'),
        ),
        migrations.AlterField(
            model_name='email',
            name='name',
            field=models.CharField(help_text='Template name to uniquely identify it.', max_length=200, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='email',
            name='subject',
            field=models.CharField(max_length=200, verbose_name='Subject'),
        ),
        migrations.AlterField(
            model_name='email',
            name='type',
            field=models.CharField(choices=[('IM', 'Instruction Mail'), ('RM', 'Reminder Mail')], help_text='Type of the template. Currently Instruction Email template and Reminder Email template are supported.', max_length=5, verbose_name='Type'),
        ),
    ]
